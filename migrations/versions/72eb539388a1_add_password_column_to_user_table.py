"""Add password column to user table

Revision ID: 72eb539388a1
Revises: 
Create Date: 2025-03-14 00:17:21.544535

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '72eb539388a1'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip dropping tables that don't exist
    # op.drop_table('surgery_schedule')
    # op.drop_table('clinical_gold_subscription')
    # op.drop_table('appointment')
    # op.drop_table('medicine')
    # op.drop_table('lab')

    with op.batch_alter_table('consultation', schema=None) as batch_op:
        batch_op.alter_column('health_problem',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('token_number',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('prescription', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('date_issued', sa.DateTime(), nullable=True))
        batch_op.alter_column('dosage',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('consultation_id')
        batch_op.drop_column('instructions')
        batch_op.drop_column('medicine_id')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(length=120), nullable=False))
        batch_op.add_column(sa.Column('is_admin', sa.Boolean(), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('full_name',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.drop_column('phone')
        batch_op.drop_column('gender')
        batch_op.drop_column('role')
        batch_op.drop_column('age')
        batch_op.drop_column('password_hash')

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.VARCHAR(length=128), nullable=False))
        batch_op.add_column(sa.Column('age', sa.VARCHAR(length=3), nullable=True))
        batch_op.add_column(sa.Column('role', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('gender', sa.VARCHAR(length=10), nullable=True))
        batch_op.add_column(sa.Column('phone', sa.VARCHAR(length=15), nullable=False))
        batch_op.alter_column('full_name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.drop_column('is_admin')
        batch_op.drop_column('password')

    with op.batch_alter_table('prescription', schema=None) as batch_op:
        batch_op.add_column(sa.Column('medicine_id', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('instructions', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('consultation_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'consultation', ['consultation_id'], ['id'])
        batch_op.create_foreign_key(None, 'medicine', ['medicine_id'], ['id'])
        batch_op.alter_column('dosage',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_column('date_issued')
        batch_op.drop_column('name')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('consultation', schema=None) as batch_op:
        batch_op.alter_column('token_number',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('health_problem',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    # Skip recreating tables that don't exist
    # op.create_table('lab', ...)
    # op.create_table('medicine', ...)
    # op.create_table('appointment', ...)
    # op.create_table('clinical_gold_subscription', ...)
    # op.create_table('surgery_schedule', ...)

    # ### end Alembic commands ###

    op.create_table('lab',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('location', sa.VARCHAR(length=200), nullable=True),
    sa.Column('contact', sa.VARCHAR(length=15), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('price', sa.FLOAT(), nullable=True),
    sa.Column('stock', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('doctor_id', sa.INTEGER(), nullable=False),
    sa.Column('date_time', sa.VARCHAR(length=50), nullable=False),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clinical_gold_subscription',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('subscription_plan', sa.VARCHAR(length=100), nullable=False),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surgery_schedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('procedure_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('scheduled_date', sa.DATETIME(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
